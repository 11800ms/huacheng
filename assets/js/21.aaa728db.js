(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{525:function(a,t,_){"use strict";_.r(t);var v=_(3),s=Object(v.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h2",{attrs:{id:"前言-知识无底-学海无涯"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言-知识无底-学海无涯"}},[a._v("#")]),a._v(" 前言 (知识无底，学海无涯)")]),a._v(" "),_("h2",{attrs:{id:"一丶数据库基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一丶数据库基础知识"}},[a._v("#")]),a._v(" 一丶数据库基础知识")]),a._v(" "),_("h3",{attrs:{id:"数据保存在内"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在内"}},[a._v("#")]),a._v(" 数据保存在内")]),a._v(" "),_("p",[a._v("优点:存取速度快\n缺点:数据不能永久保存")]),a._v(" "),_("h3",{attrs:{id:"数据保存在文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在文件"}},[a._v("#")]),a._v(" 数据保存在文件")]),a._v(" "),_("p",[a._v("优点:数据永久保存\n缺点:速度比内存操作慢，频繁的IO操作,查询数据不方便。")]),a._v(" "),_("h3",{attrs:{id:"数据保存在数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在数据库"}},[a._v("#")]),a._v(" 数据保存在数据库")]),a._v(" "),_("ul",[_("li",[a._v("1）数据永久保存")]),a._v(" "),_("li",[a._v("2）使用SQL语句，查询方便效率高。")]),a._v(" "),_("li",[a._v("3）管理数据方便"),_("br"),a._v("\n要学的东西有很多,有些东西我们知道的可能都只是皮毛,所以如果为了以后的高新就业我们就要把,知识掌握的更加巩固。")])]),a._v(" "),_("h2",{attrs:{id:"什么是sql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是sql"}},[a._v("#")]),a._v(" 什么是SQL？")]),a._v(" "),_("ul",[_("li",[a._v("结构化查询语言(Structured Query Language)简称SQL，是一种数据库查询语言。")])]),a._v(" "),_("hr"),a._v(" "),_("p",[a._v("作用：用于存取数据、查询、更新和管理关系数据库系统。")]),a._v(" "),_("h2",{attrs:{id:"什么是mysql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是mysql"}},[a._v("#")]),a._v(" 什么是MYSQL?")]),a._v(" "),_("p",[a._v("MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。在Java企业级开发中非常常用，因为 MySQL 是开源免费的，并且方便扩展。")]),a._v(" "),_("h2",{attrs:{id:"数据库三大范式是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库三大范式是什么"}},[a._v("#")]),a._v(" 数据库三大范式是什么")]),a._v(" "),_("ul",[_("li",[a._v("第一范式：每个列都不可以再拆分。")]),a._v(" "),_("li",[a._v("第二范式：在第一范式的基础上，非主键列完全依赖于主键，而不能是依赖于主键的一部分。")]),a._v(" "),_("li",[a._v("第三范式：在第二范式的基础上，非主键列只依赖于主键，不依赖于其他非主键。\n在设计数据库结构的时候，要尽量遵守三范式，如果不遵守，必须有足够的理由。比如性能。事实上我们经常会为了性能而妥协数据库的设计。")])]),a._v(" "),_("h2",{attrs:{id:"mysql有关权限的表都有哪几个"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql有关权限的表都有哪几个"}},[a._v("#")]),a._v(" mysql有关权限的表都有哪几个")]),a._v(" "),_("p",[a._v("MySQL服务器通过权限表来控制用户对数据库的访问，权限表存放在mysql数据库里，由mysql_install_db脚本初始化。这些权限表分别user，db，table_priv，columns_priv和host。下面分别介绍一下这些表的结构和内容：")]),a._v(" "),_("ul",[_("li",[a._v("user权限表：记录允许连接到服务器的用户帐号信息，里面的权限是全局级的。")]),a._v(" "),_("li",[a._v("db权限表：记录各个帐号在各个数据库上的操作权限。")]),a._v(" "),_("li",[a._v("table_priv权限表：记录数据表级的操作权限。")]),a._v(" "),_("li",[a._v("columns_priv权限表：记录数据列级的操作权限。")]),a._v(" "),_("li",[a._v("host权限表：配合db权限表对给定主机上数据库级操作权限作更细致的控制。这个权限表不受GRANT和REVOKE语句的影响。")])]),a._v(" "),_("h2",{attrs:{id:"mysql的binlog有有几种录入格式-分别有什么区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql的binlog有有几种录入格式-分别有什么区别"}},[a._v("#")]),a._v(" MySQL的binlog有有几种录入格式？分别有什么区别？")]),a._v(" "),_("p",[a._v("有三种格式，statement，row和mixed。")]),a._v(" "),_("ul",[_("li",[a._v("statement模式下，每一条会修改数据的sql都会记录在binlog中。不需要记录每一行的变化，减少了binlog日志量，节约了IO，提高性能。由于sql的执行是有上下文的，因此在保存的时候需要保存相关的信息，同时还有一些使用了函数之类的语句无法被记录复制。")]),a._v(" "),_("li",[a._v("row级别下，不记录sql语句上下文相关信息，仅保存哪条记录被修改。记录单元为每一行的改动，基本是可以全部记下来但是由于很多操作，会导致大量行的改动(比如alter table)，因此这种模式的文件保存的信息太多，日志量太大。")]),a._v(" "),_("li",[a._v("mixed，一种折中的方案，普通操作使用statement记录，当无法使用statement的时候使用row。\n此外，新版的MySQL中对row级别也做了一些优化，当表结构发生变化的时候，会记录语句而不是逐行记录。")])]),a._v(" "),_("h2",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),_("h3",{attrs:{id:"四种整数类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四种整数类型"}},[a._v("#")]),a._v(" 四种整数类型:")]),a._v(" "),_("ul",[_("li",[a._v("byte：8 位，用于表示最小数据单位，如文件中数据，-128~127")]),a._v(" "),_("li",[a._v("short：16 位，很少用，-32768 ~ 32767")]),a._v(" "),_("li",[a._v("int：32 位、最常用，-2^31-1~2^31  （21 亿）")]),a._v(" "),_("li",[a._v("long：64 位、次常用    注意事项")])]),a._v(" "),_("h3",{attrs:{id:"两种浮点数类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#两种浮点数类型"}},[a._v("#")]),a._v(" 两种浮点数类型:")]),a._v(" "),_("ul",[_("li",[a._v("float：32 位，后缀 F 或 f，1 位符号位，8 位指数，23 位有效尾数。")]),a._v(" "),_("li",[a._v("double：64 位，最常用，后缀 D 或 d，1 位符号位，11 位指数，52 位有效尾")])]),a._v(" "),_("h3",{attrs:{id:"一种字符类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一种字符类型"}},[a._v("#")]),a._v(" 一种字符类型")]),a._v(" "),_("ul",[_("li",[a._v("char：16 位，是整数类型，用单引号括起来的 1 个字符（可以是一个中文字符），使用 Unicode 码代表字符，0~2^16-1（65535）")])]),a._v(" "),_("h3",{attrs:{id:"一种布尔类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一种布尔类型"}},[a._v("#")]),a._v(" 一种布尔类型")]),a._v(" "),_("ul",[_("li",[a._v("boolean：true 真  和 false 假。")])]),a._v(" "),_("h3",{attrs:{id:"类型转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[a._v("#")]),a._v(" 类型转换")]),a._v(" "),_("ul",[_("li",[a._v("char--\x3e    自动转换：byte--\x3eshort--\x3eint--\x3elong--\x3efloat--\x3edouble强制转换：")]),a._v(" "),_("li",[a._v("①会损失精度，产生误差，小数点以后的数字全部舍弃。")]),a._v(" "),_("li",[a._v("②容易超过取值范围。")])]),a._v(" "),_("h3",{attrs:{id:"记忆"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#记忆"}},[a._v("#")]),a._v(" 记忆")]),a._v(" "),_("ul",[_("li",[a._v("Byte（字节型）  16位：short（短整型）")]),a._v(" "),_("li",[a._v("char（字符型）")]),a._v(" "),_("li",[a._v("32位：int（整型）")]),a._v(" "),_("li",[a._v("float（单精度型/浮点型64位")]),a._v(" "),_("li",[a._v("long（长整型）")]),a._v(" "),_("li",[a._v("double（双精度型）")]),a._v(" "),_("li",[a._v("boolean(布尔类型")])]),a._v(" "),_("h2",{attrs:{id:"引擎"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引擎"}},[a._v("#")]),a._v(" 引擎")]),a._v(" "),_("h3",{attrs:{id:"mysql存储引擎myisam与innodb区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储引擎myisam与innodb区别"}},[a._v("#")]),a._v(" MySQL存储引擎MyISAM与InnoDB区别")]),a._v(" "),_("p",[a._v("存储引擎Storage engine：MySQL中的数据、索引以及其他对象是如何存储的，是一套文件系统的实现。")]),a._v(" "),_("ul",[_("li",[a._v("常用的存储引擎有以下：\n"),_("ul",[_("li",[a._v("Innodb引擎：Innodb引擎提供了对数据库ACID事务的支持。并且还提供了行级锁和外键的约束。它的设计的目标就是处理大数据容量的数据库系统。")]),a._v(" "),_("li",[a._v("MyIASM引擎(原本Mysql的默认引擎)：不提供事务的支持，也不支持行级锁和外键。")]),a._v(" "),_("li",[a._v("MEMORY引擎：所有的数据都在内存中，数据的处理速度快，但是安全性不高。")])])])]),a._v(" "),_("h2",{attrs:{id:"myisam索引与innodb索引的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#myisam索引与innodb索引的区别"}},[a._v("#")]),a._v(" MyISAM索引与InnoDB索引的区别？")]),a._v(" "),_("ul",[_("li",[a._v("InnoDB索引是聚簇索引，MyISAM索引是非聚簇索引。")]),a._v(" "),_("li",[a._v("InnoDB的主键索引的叶子节点存储着行数据，因此主键索引非常高效。")]),a._v(" "),_("li",[a._v("MyISAM索引的叶子节点存储的是行数据地址，需要再寻址一次才能得到数据。")]),a._v(" "),_("li",[a._v("InnoDB非主键索引的叶子节点存储的是主键和其他带索引的列数据，因此查询时做到覆盖索引会非常高效。")])]),a._v(" "),_("h2",{attrs:{id:"innodb引擎的4大特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#innodb引擎的4大特性"}},[a._v("#")]),a._v(" InnoDB引擎的4大特性")]),a._v(" "),_("ul",[_("li",[a._v("插入缓冲（insert buffer)")]),a._v(" "),_("li",[a._v("二次写(double write)")]),a._v(" "),_("li",[a._v("自适应哈希索引(ahi)")]),a._v(" "),_("li",[a._v("预读(read ahead)")])]),a._v(" "),_("h2",{attrs:{id:"存储引擎选择"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎选择"}},[a._v("#")]),a._v(" 存储引擎选择")]),a._v(" "),_("ul",[_("li",[a._v("如果没有特别的需求，使用默认的Innodb即可。\n"),_("ul",[_("li",[a._v("MyISAM：以读写插入为主的应用程序，比如博客系统、新闻门户网站。")]),a._v(" "),_("li",[a._v("Innodb：更新（删除）操作频率也高，或者要保证数据的完整性；并发量高，支持事务和外键。比如OA自动化办公系统。")])])])]),a._v(" "),_("h2",{attrs:{id:"索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),_("h3",{attrs:{id:"什么是索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是索引"}},[a._v("#")]),a._v(" 什么是索引？")]),a._v(" "),_("ul",[_("li",[a._v("索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。")]),a._v(" "),_("li",[a._v("索引是一种数据结构。数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用B树及其变种B+树。")]),a._v(" "),_("li",[a._v("更通俗的说，索引就相当于目录。为了方便查找书中的内容，通过对内容建立索引形成目录。索引是一个文件，它是要占据物理空间的。")])]),a._v(" "),_("h2",{attrs:{id:"索引有哪些优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引有哪些优缺点"}},[a._v("#")]),a._v(" 索引有哪些优缺点？")]),a._v(" "),_("p",[a._v("索引的优点")]),a._v(" "),_("blockquote",[_("ul",[_("li",[a._v("可以大大加快数据的检索速度，这也是创建索引的最主要的原因。")]),a._v(" "),_("li",[a._v("通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。")])])]),a._v(" "),_("p",[a._v("索引的缺点")]),a._v(" "),_("blockquote",[_("ul",[_("li",[a._v("时间方面：创建索引和维护索引要耗费时间，具体地，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，会降低增/改/删的执行效率；")]),a._v(" "),_("li",[a._v("空间方面：索引需要占物理空间。")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{529:function(s,t,a){"use strict";a.r(t);var n=a(3),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"开头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开头"}},[s._v("#")]),s._v(" 开头")]),s._v(" "),a("p",[s._v("面试官您好！ 我是花城，今年 22 岁，来自于阴影，15 年毕业于五道口职业技术学院计算机与网络技术专业，毕业后一直从事软件工程行业，目前有 3 年工作经验，之前一直在深圳XX 有限公司工作，在这三年中我一直在某某公司工作，目前在后端开发管理系统。")]),s._v(" "),a("p",[s._v("(2)您好！我来自XXX大学，是应届毕业生，所学专业是计算机应用技术，我在校期间参加多项课余工作，参与了多个应用系统的开发与设计，熟练掌握Java开发工具和应用系统的各种开发方法。在学习与工作期间，总结与实践了各种技术实现手段，有了一些小的积累。\n近期已经毕业，看到您公司的招聘信息，感觉自己的技术与能力非常合适，就投递了简历。希望能过了您这关")]),s._v(" "),a("p",[s._v("开始介绍项目")]),s._v(" "),a("p",[s._v("此项目所用的\n开发语言：Java + vue\n后台框架：Springboot")]),s._v(" "),a("p",[s._v("前端：Vue\n数据库：MySql\t\n开发环境：jdk\n开发工具：Intellij Idea\n浏览器：Chrome或360浏览器")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("spring启动器\nspring-boot-starter\nspringboot与web相关的包\nspring-boot-starter-web\nmybatis-spring-boot-starter\nmysql驱动\nmysql-connector-java\n数据库连接池\ndruid\n")])])]),a("h2",{attrs:{id:"_1-java基础-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-java基础-m-m"}},[s._v("#")]),s._v(" 1. Java基础(((m -__-)m")]),s._v(" "),a("p",[s._v("①Static")]),s._v(" "),a("p",[s._v("被static修饰的成员会变为类成员，不需要创建对象通过类名.属性名进行调用,他是静态公共的。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("②什么是重写？")]),s._v(" "),a("p",[s._v("重写(Override)概念:重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。(即外壳不变，核心重写！重点)")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("③方法重写的一些特性：")]),s._v(" "),a("ul",[a("li",[s._v("1.发生方法重写的两个方法返回值、方法名、参数列表必须完全一致(子类重写父类的方法)")]),s._v(" "),a("li",[s._v("2.子类抛出的异常下不能超过父类相应方法抛出的异常(子类异常不能大于父类异常)")]),s._v(" "),a("li",[s._v("3.子类方法的访问级别不能低于父类相应方法的访问级别(子类访问级别不能低于父类访问级别)")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("④重写的作用？\n重写是为了增强类的重用性和复用性，扩展性；")]),s._v(" "),a("ul",[a("li",[s._v("重写是对类中方法的扩充，因为继承用的是父类的东西，重写则不仅得到父类的东西，同时也加入了自己的东西，两全其美。")])]),s._v(" "),a("p",[s._v("⑤面向对象的三大基本特征：封装、继承和多态\n一、封装")]),s._v(" "),a("p",[s._v("为什么要用封装")]),s._v(" "),a("ul",[a("li",[s._v("封装是改变成员变量的访问权限，改而设置一些方法如set,get来给成员变量赋值，我们可以在这些方法中规定成员变量的赋值原则，避免错误的不符合规定的的赋值。")])]),s._v(" "),a("blockquote",[a("p",[s._v("利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节，但可以通过对象对外提供的接口来访问该对象。")])]),s._v(" "),a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[s._v("减少耦合：可以独立地开发、测试、优化、使用、理解和修改")]),s._v(" "),a("li",[s._v("减轻维护的负担：可以更容易被程序员理解，并且在调试的时候可以不影响其他模块")]),s._v(" "),a("li",[s._v("有效地调节性能：可以通过剖析确定哪些模块影响了系统的性能")]),s._v(" "),a("li",[s._v("提高软件的可重用性")]),s._v(" "),a("li",[s._v("降低了构建大型系统的风险：即使整个系统不可用，但是这些独立的模块却有可能是可用的\n二丶 继承")])]),s._v(" "),a("p",[s._v("为什么需要继承？(extends)")]),s._v(" "),a("ul",[a("li",[s._v("使用继承可以有效实现代码的复用，避免重复代码的出现")]),s._v(" "),a("li",[s._v("当两个类具有相同的特征（属性）和行为（方法）时，可以相同的部分抽取出来放到一个类中作为父类，其他两个类继承这个父类。")]),s._v(" "),a("li",[s._v("继承实现了面向对象的原则：write once，only once（编写一次，且编写一次）\n三丶多态")])]),s._v(" "),a("p",[s._v("一个事物有多种不同的表现是形式,多态意味着将可能有向上转型和向下转型.\n有两个好处：")]),s._v(" "),a("ol",[a("li",[s._v("应用程序不必为每一个派生类编写功能调用，只需要对抽象基类进行处理即可。大大提高程序的可复用性。//继承")]),s._v(" "),a("li",[s._v("派生类的功能可以被基类的方法或引用变量所调用，这叫向后兼容，可以提高可扩充性和可维护性。 //多态的真正作用，")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑥Ajax的属性都有什么？\nurl:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("要求为"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("类型的参数，（默认为当前页地址）发送请求的地址。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("type:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("要求为"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("类型的参数，请求方式（post或get）默认为get。\n注意其他http请求方法，例如put和delete也可以使用，但仅部分浏览器支持。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("data:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("要求为"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v("或"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("类型的参数，发送到服务器的数据。如果已经不是字符串，将自动转换为字符串格式。\nget请求中将附加在url后。防止这种自动转换，可以查看processData选项。对象必须为key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("value格式，\n例如"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("foo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("foo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("转换为"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("foo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("foo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar2。\n如果是数组，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JQuery")]),s._v("将自动为不同值对应同一个名称。\n例如"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("转换为"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bar2。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("dataType:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("要求为"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("类型的参数，预期服务器返回的数据类型。如果不指定，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JQuery")]),s._v("将自动根据http包mime信息返回responseXML或responseText，并作为回调函数参数传递。可用的类型如下：\nxml：返回XML文档，可用"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JQuery")]),s._v("处理。\nhtml：返回纯文本HTML信息；包含的script标签会在插入DOM时执行。\nscript：返回纯文本"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaScript")]),s._v("代码。不会自动缓存结果。除非设置了cache参数。注意在远程请求时（不在同一个域下），所有post请求都将转为get请求。\njson：返回JSON数据。\njsonp：JSONP格式。使用SONP形式调用函数时，例如myurl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("callback"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JQuery")]),s._v("将自动替换后一个“"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("”为正确的函数名，以执行回调函数。\ntext：返回纯文本字符串。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("success：要求为Function类型的参数，请求成功后调用的回调函数，有两个参数。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("由服务器返回，并根据dataType参数进行处理后的数据。\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("描述状态的字符串。\n         "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" textStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//data可能是xmlDoc、jsonObj、html、text等等")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用本次ajax请求时传递的options参数")]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("error:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("要求为"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Function")]),s._v("类型的参数，请求失败时被调用的函数。该函数有"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("个参数，即"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("XMLHttpRequest")]),s._v("对象、错误信息、捕获的错误对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("可选"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。ajax事件函数如下：\n       "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" textStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" errorThrown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通常情况下textStatus和errorThrown只有其中一个包含信息")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用本次ajax请求时传递的options参数")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑦拦截器和过滤器")]),s._v(" "),a("p",[s._v("过滤器（Filter）")]),s._v(" "),a("blockquote",[a("p",[s._v("过滤器，是在java web中将你传入的request、response提前过滤掉一些信息，或者提前设置一些参数。然后再传入Servlet或Struts2的 action进行业务逻辑处理。比如过滤掉非法url（不是login.do的地址请求，如果用户没有登陆都过滤掉），或者在传入Servlet或Struts2的action前统一设置字符集，或者去除掉一些非法字符。")])]),s._v(" "),a("p",[s._v("拦截器（Interceptor）")]),s._v(" "),a("blockquote",[a("p",[s._v("拦截器，是面向切面编程（AOP，Aspect Oriented Program）的。就是在你的Service或者一个方法前调用一个方法，或者在方法后调用一个方法。比如动态代理就是拦截器的简单实现，在你调用方法前打印出字符串（或者做其它业务逻辑的操作），也可以在你调用方法后打印出字符串，甚至在你抛出异常的时候做业务逻辑的操作。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑧拦截器与过滤器的区别")]),s._v(" "),a("p",[s._v("区别：")]),s._v(" "),a("ol",[a("li",[s._v("拦截器是基于java的反射机制的，而过滤器是基于函数的回调。")]),s._v(" "),a("li",[s._v("拦截器不依赖于servlet容器，而过滤器依赖于servlet容器。")]),s._v(" "),a("li",[s._v("拦截器只对action请求起作用，而过滤器则可以对几乎所有的请求起作用。")]),s._v(" "),a("li",[s._v("拦截器可以访问action上下文、值、栈里面的对象，而过滤器不可以。")]),s._v(" "),a("li",[s._v("在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次。")]),s._v(" "),a("li",[s._v("拦截器可以获取IOC容器中的各个bean，而过滤器不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。\n使用场景")])]),s._v(" "),a("ul",[a("li",[s._v("SpringMVC的处理器拦截器类似于Servlet开发中的过滤器Filter，用于对处理器进行预处理和后处理。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑨\n什么是sevlet？")]),s._v(" "),a("p",[s._v("servlet是web开发中的一个标准，主要是交互式地浏览和修改数据，生成动态Web内容。")]),s._v(" "),a("ul",[a("li",[s._v("Tomcat如何与后台代码的交互流程\n"),a("img",{attrs:{src:"https://11800ms.github.io/huacheng/assets/img/java/note01.png",alt:""}}),s._v("\n在此说明一下，servlet所有的生命周期是在服务器中进行的，看图1就可以明白，我们在后台的一系列操作其实都是在tomcat中wrap包装类中进行，而直接控制servlet的是context，而控制servlet的则是web容器\n"),a("img",{attrs:{src:"https://11800ms.github.io/huacheng/assets/img/java/note02.png",alt:""}})])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑩sevlet的生命周期\nServlet生命周期分为三个阶段：")]),s._v(" "),a("ol",[a("li",[s._v("初始化阶段  调用init()方法")]),s._v(" "),a("li",[s._v("响应客户请求阶段　　调用service()方法")]),s._v(" "),a("li",[s._v("终止阶段　　调用destroy()方法\nServlet初始化阶段：")])]),s._v(" "),a("ul",[a("li",[s._v("在下列时刻Servlet容器装载Servlet：")]),s._v(" "),a("li",[s._v("1.Servlet容器启动时自动装载某些Servlet，实现它只需要在web.XML文件中的"),a("Servlet"),s._v("之间添加如下代码：")],1)]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("loadon"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("startup"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("loadon"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("startup"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("2.在Servlet容器启动后，客户首次向Servlet发送请求")]),s._v(" "),a("li",[s._v("3，Servlet类文件被更新后，重新装载Servlet\nServlet被装载后，Servlet容器创建一个Servlet实例并且调用Servlet的init()方法进行初始化。在Servlet的整个生命周期内，init()方法只被调用一次。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十一丶 Servlet工作原理：")]),s._v(" "),a("p",[s._v("首先简单解释一下Servlet接收和响应客户请求的过程，首先客户发送一个请求，Servlet是调用service()方法对请求进行响应的，通过源代码可见，service()方法中对请求的方式进行了匹配，选择调用doGet,doPost等这些方法，然后再进入对应的方法中调用逻辑层的方法，实现对客户的响应。在Servlet接口和GenericServlet中是没有doGet,doPost等等这些方法的，HttpServlet中定义了这些方法，但是都是返回error信息，所以，我们每次定义一个Servlet的时候，都必须实现doGet或doPost等这些方法。")]),s._v(" "),a("p",[s._v("每一个自定义的Servlet都必须实现Servlet的接口，Servlet接口中定义了五个方法，其中比较重要的三个方法涉及到Servlet的生命周期，分别是上文提到的init(),service(),destroy()方法。GenericServlet是一个通用的，不特定于任何协议的Servlet,它实现了Servlet接口。而HttpServlet继承于GenericServlet，因此HttpServlet也实现了Servlet接口。所以我们定义Servlet的时候只需要继承HttpServlet即可。")]),s._v(" "),a("p",[s._v("Servlet接口和GenericServlet是不特定于任何协议的，而HttpServlet是特定于HTTP协议的类，所以HttpServlet中实现了service()方法，并将请求ServletRequest,ServletResponse强转为HttpRequest和HttpResponse。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十二丶\n项目的连接池都有哪些")]),s._v(" "),a("p",[s._v("c3p0和dru(阿里巴巴数据库)")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十三丶子类初始化构造器时，父类的构造器会不会初始化")]),s._v(" "),a("p",[s._v("会初始化")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十四丶统计字符串的字符出现的个数")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ma")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ma")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tcount"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"此字符串有"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"个"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("先建一个变量统计出现的次数(int count =0)然后用while循环来判断当前字符串里面indexOf是否包含统计的字符如果包含的话就从当前包含字符串的位置开始截取最好count++(+1)知道循环结束然后打印count")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十五丶两种代理模式分别是什么\nCGlib动态代理")]),s._v(" "),a("p",[s._v("JDK动态代理")]),s._v(" "),a("p",[s._v("十六丶\n⑨ 重写与重载的区别\n重载(Overloading)\n方法重载是让类以统一的方式处理不同类型数据的一种手段。多个同名函数同时存在，具有不同的参数个数/类型。")]),s._v(" "),a("p",[s._v("重载Overloading是一个类中多态性的一种表现。")]),s._v(" "),a("p",[s._v("Java的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。")]),s._v(" "),a("p",[s._v("调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。")]),s._v(" "),a("p",[s._v("重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回型别作为重载函数的区分标准。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v(" 父类方法被默认修饰时，只能在同一包中，被其子类被重写，如果不在同一包则不能重写。\n\n父类的方法被protoeted时，不仅在同一包中，被其子类被重写，还可以不同包的子类重写。\n")])])]),a("p",[s._v("override（重写）\n1、方法名、参数、返回值相同。")]),s._v(" "),a("p",[s._v("2、子类方法不能缩小父类方法的访问权限。")]),s._v(" "),a("p",[s._v("3、子类方法不能抛出比父类方法更多的异常(但子类方法可以不抛出异常)。")]),s._v(" "),a("p",[s._v("4、存在于父类和子类之间。")]),s._v(" "),a("p",[s._v("5、方法被定义为final不能被重写。")]),s._v(" "),a("p",[s._v("overload（重载）")]),s._v(" "),a("p",[s._v("1、参数类型、个数、顺序至少有一个不相同。")]),s._v(" "),a("p",[s._v("2、不能重载只有返回值不同的方法名。")]),s._v(" "),a("p",[s._v("3、存在于父类和子类、同类中。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十七丶 final关键字的作用")]),s._v(" "),a("p",[s._v("可以修饰类，不能被继承")]),s._v(" "),a("p",[s._v("修饰方法不能被重写")]),s._v(" "),a("p",[s._v("修饰变量，只能赋值一次")]),s._v(" "),a("h2",{attrs:{id:"_2-mysql-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql-m-m"}},[s._v("#")]),s._v(" 2. Mysql(((m -__-)m")]),s._v(" "),a("p",[s._v("①mysql事务三大伴生问题")]),s._v(" "),a("ul",[a("li",[a("ol",[a("li",[s._v("脏读")])])])]),s._v(" "),a("blockquote",[a("p",[s._v('读取到未提交的数据，该数据可能在对应事务中的之后操作还有进一轮的操作，所以是"脏"的，不是最终的，不是"干净的"。\n假设蓝色线是执行顺序，脏数据的读取情况可以如下表示。')])]),s._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("不可重复读")])])])]),s._v(" "),a("blockquote",[a("p",[s._v('不可重复读是指在一个事务内，多次读同一数据，但读取到的数据不一致的情况。要注意，不可重复读要在"一个事务"中讨论。')])]),s._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"3"}},[a("li",[s._v("幻读")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("举个例子: A事务修改表table中的所有数据，在A事务处理时B事务往表table中插入一条数据，从A的角度看，自己明明把所有数据都修改过了，怎么还多出来一条数据? 感觉出现了幻觉似的。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("②MYSQL 隔离级别")]),s._v(" "),a("ul",[a("li",[a("ol",[a("li",[s._v("未提交读(read uncommitted)")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("未提交读是最低级的隔离级别，一般来说都不会选择这个级别。缺点不少，优点不多。正如图所示，脏读、可不重复读、幻读都它中了招。")])]),s._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("已提交读(read committed)")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("保证了读到的任何数据都是提交的数据，避免读到中间的未提交的数据")])]),s._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"3"}},[a("li",[s._v("串行化(seraible)")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("最高级的隔离级别，事务都排成一队一个个执行，不会出现问题但加锁解锁的性能开销很高，一般来说不用使用这个等级的隔离级别。")])]),s._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"4"}},[a("li",[s._v("可重复读(repeatable read)")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("这是mysql默认的隔离级别。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("③mysql索引的作用")]),s._v(" "),a("p",[s._v("索引是什么，首先我们可以举个例子，字典大家应该都使用过，我们可以使用目录快速定位到所要查找的内容，那么索引跟目录的作用类似，在数据库表记录中，利用索引，可以快速过滤查找到数据记录。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("④索引类型分类")]),s._v(" "),a("ul",[a("li",[s._v("2.1 普通索引")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("加快查询速度")])])]),s._v(" "),a("ul",[a("li",[s._v("2.2 唯一索引")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("加快查询速度，并且可以限制列值的唯一性，允许为空")]),s._v(" "),a("li",[s._v("唯一索引包括联合唯一索引，多列形成的唯一索引，这些列可以唯一确定一条表记录，可以为空")])])]),s._v(" "),a("ul",[a("li",[s._v("2.3 全文索引")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("主要针对文本的内容进行分词，加快查询速度")])])]),s._v(" "),a("ul",[a("li",[s._v("2.4 联合索引")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("多列组成的索引，查询效率提升高于多个单列索引合并的效率")])])]),s._v(" "),a("ul",[a("li",[s._v("2.5 主键索引")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("主键唯一性，加快查询速度，不能为空")])])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑤mysql的索引都有什么\nMysql目前主要有以下几种索引类型：FULLTEXT(fulltext)，HASH(hash)，BTREE(btree)，RTREE(rtree)。\nHASH")]),s._v(" "),a("ul",[a("li",[s._v("由于HASH的唯一（几乎100%的唯一）及类似键值对的形式，很适合作为索引。")]),s._v(" "),a("li",[s._v("HASH索引可以一次定位，不需要像树形索引那样逐层查找,因此具有极高的效率。但是，这种高效是有条件的，即只在“=”和“in”条件下高效，对于范围查询、排序及组合索引仍然效率不高。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑥数据库的约束都有什么\n1.—-添加主键约束（将stuNo作为主键）")]),s._v(" "),a("p",[s._v("2.—-添加唯一约束（身份证号唯一，因为每个人的都不一样）")]),s._v(" "),a("p",[s._v("3.—-添加默认约束（如果地址不填默认为“地址不详”）")]),s._v(" "),a("p",[s._v("4.—-添加检查约束（对年龄加以限定 15-40岁之间）")]),s._v(" "),a("p",[s._v("5.—-添加外键约束 (主表stuInfo和从表stuMarks建立关系，关联字段stuNo)")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑦JDBC的流程")]),s._v(" "),a("ol",[a("li",[s._v("引包:")]),s._v(" "),a("li",[s._v("开启MySQL服务,")]),s._v(" "),a("li",[s._v(".准备好数据库")]),s._v(" "),a("li",[s._v("进入开发阶段")]),s._v(" "),a("li",[s._v("注册数据库驱动")]),s._v(" "),a("li",[s._v("和数据库建立连接")]),s._v(" "),a("li",[s._v("获得执行sql语句的对象")])]),s._v(" "),a("p",[s._v("为什么加载驱动被包着，而不放在一个类里")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑧treemap什么特点 与hashmap的区别")]),s._v(" "),a("p",[s._v("HashMap 代码分析:")]),s._v(" "),a("p",[s._v("HashMap 是基于哈希表的 Map 接口的实现。此实现提供所有可选的映射操作，(重点!!!!)并允许使用 null 值和 null 键。（除了非同步和允许使用 null 之外，HashMap 类与 Hashtable 大致相同。）此类不保证映射的顺序，特别是它不保证该顺序恒久不变。")]),s._v(" "),a("p",[s._v("TreeMap代码分析:\n基于红黑树（Red-Black tree）的 NavigableMap 实现。该映射根据其键的自然顺序进行排序，或者根据创建映射时提供的 Comparator 进行排序，具体取决于使用的构造方法。")]),s._v(" "),a("p",[s._v("HashMap和TreeMap比较")]),s._v(" "),a("p",[s._v("（1）HashMap:适用于在Map中插入、删除和定位元素。")]),s._v(" "),a("p",[s._v("（2）Treemap:适用于按自然顺序或自定义顺序遍历键（key）。")]),s._v(" "),a("p",[s._v("（3）HashMap通常比TreeMap快一点（树和哈希表的数据结构使然），建议多使用HashMap,在需要排序的Map时候才用TreeMap.")]),s._v(" "),a("p",[s._v("（4）HashMap 非线程安全 TreeMap 非线程安全")]),s._v(" "),a("p",[s._v("（5）HashMap的结果是没有排序的，而TreeMap输出的结果是排好序的。")]),s._v(" "),a("p",[s._v("在HashMap中通过get（）来获取value,通过put（）来插入value,ContainsKey（）则用来检验对象是否已经存在。可以看出，和ArrayList的操作相比，HashMap除了通过key索引其内容之外，别的方面差异并不大。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑩2.动态SQL标签")]),s._v(" "),a("p",[s._v("定义SQL语句：select insert delete update")]),s._v(" "),a("p",[s._v("配置java对象属性与查询结果集中列名对应关系：resultMap")]),s._v(" "),a("p",[s._v("控制动态SQL拼接：if foreach choose")]),s._v(" "),a("p",[s._v("格式化输出：where set trim")]),s._v(" "),a("p",[s._v("配置关联关系：collection association")]),s._v(" "),a("p",[s._v("定义常量及引用：sql include")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十一丶mysql的函数有哪些")]),s._v(" "),a("p",[s._v("数值型函数:")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("abs 绝对值\nsqrt 二次方根\nfloor 向下取整\nrand 0~1随机数\nround 四舍五入\n")])])]),a("p",[s._v("字符串函数：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("length 返回字符串的字节长度\nconcat 合并字符串\ninsert 替换字符串\nlower 将字符串中的字母转换为小写\nupper 将字符串中的字母转换为大写\ntrim 删除字符串左右两侧的空格\nreverse 字符串反转\n")])])]),a("p",[s._v("日期和时间函数：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("curdate  返回当前系统的日期值\ncurtime  返回当前系统的时间值\nnow  返回当前系统的日期和时间\n")])])]),a("p",[s._v("聚合函数：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("max 最大值\nmin 最小值\ncount 统计查询结果的行数\nsum 求和\navg 求平均值\n")])])]),a("p",[s._v("流程控制函数：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("if 判断是否为true\nifnull 判断是否为空\ncase 分支判断\n")])])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_3-mybatis-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mybatis-m-m"}},[s._v("#")]),s._v(" 3. Mybatis(((m -__-)m")]),s._v(" "),a("p",[s._v("①#{}和${}的区别")]),s._v(" "),a("p",[s._v("#{}代表的是预编译,可以预防sql注入${}字符串替换")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("②JDBC和mybatis的区别")]),s._v(" "),a("p",[s._v("mybatis也是基于JDBC的。Java与数据库操作仅能通过JDBC完成。 mybatis也要通过JDBC完成数据查询、更新这些动作。")]),s._v(" "),a("ul",[a("li",[s._v("mybatis仅仅是在JDBC基础上做了，OO化、封装事务管理接口这些东西。")]),s._v(" "),a("li",[s._v("JDBC是地基,mybatis/Hibernate 是两栋外形各自有特点的楼房，楼房之间可以比较！地基就这一种。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("③maibytis文件中上的namespace的作用")]),s._v(" "),a("p",[s._v("mybatis中为每一个映射文件添加一个namespace，这样不同的映射文件中sql的id相同也不会有冲突，只要定义在映射文件中的sql语句在该映射文件中的id唯一就可以。")]),s._v(" "),a("h2",{attrs:{id:"_4-spring-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-spring-m-m"}},[s._v("#")]),s._v(" 4. Spring(((m -__-)m")]),s._v(" "),a("p",[s._v("①AOP#")]),s._v(" "),a("p",[s._v("AOP全称（Aspect Oriented Programming）面向切片编程的简称")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("②AOP的定义：")]),s._v(" "),a("p",[s._v("AOP通过预编译方式和运行期动态代理实现，在不修改源代码的情况下，给程序动态统一添加功能的一种技术，简称AOP。是spring框架的一个重要内容，是OOP（面向对象编程）的衍生模范。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("③AOP的作用：")]),s._v(" "),a("p",[s._v("利用AOP对业务逻辑的各个部分进行隔离，降低业务逻辑的耦合性，提高程序的可重用型和开发效率。\n主要用于对同一对象层次的公用行为建模")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("④常见的通知")]),s._v(" "),a("ul",[a("li",[s._v("1.前置通知   方法执行前调用  对应注解 @Before")]),s._v(" "),a("li",[s._v("2.后置通知   方法执行后调用  对应注解 @After")]),s._v(" "),a("li",[s._v("3.返回通知   方法返回后调用  对应注解 @AfterReturning")]),s._v(" "),a("li",[s._v("4.异常通知   方法出现异常调用 对应注解 @AfterThrowing")]),s._v(" "),a("li",[s._v("5.环绕通知   动态代理、手动推荐方法运行 对应注解 @Around")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑤Spring DI注入方式有哪些\nSet和Get")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑥Spring的注解都有什么")]),s._v(" "),a("blockquote",[a("p",[s._v("@Component()")])]),s._v(" "),a("ul",[a("li",[s._v("@Repository、@Service、@Controller 和 @Component 将类标识为Bean")]),s._v(" "),a("li",[s._v("@Service用于标注业务层组件")]),s._v(" "),a("li",[s._v("@Controller用于标注控制层组件（如struts中的action）")]),s._v(" "),a("li",[s._v("@Repository用于标注数据访问组件，即DAO组件")]),s._v(" "),a("li",[s._v("@Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。")])]),s._v(" "),a("p",[s._v("⑦二、@RestController和@Controller的区别")]),s._v(" "),a("ul",[a("li",[s._v("@RestController注解等价于@ResponseBody ＋ @Controller。")]),s._v(" "),a("li",[s._v("@RestController和@Controller的共同点是都用来表示Spring某个类是否可以接收HTTP请求，")])]),s._v(" "),a("p",[s._v("二者区别：")]),s._v(" "),a("ul",[a("li",[s._v("@RestController无法返回指定页面，而@Controller可以；")]),s._v(" "),a("li",[s._v("前者可以直接返回数据，后者需要@ResponseBody辅助。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑧ @Resource和@Autowired\n@Resource的作用相当于@Autowired，")]),s._v(" "),a("ul",[a("li",[s._v("只不过@Autowired按byType自动注入，而@Resource默认按 byName自动注入罢了。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑨@Data注解 与 lombok")]),s._v(" "),a("ul",[a("li",[s._v("ps:因为项目开发过程中你难免会加一个字段，如果加完还要补充get()、 set()方法，重写 toString()就太麻烦了。\n1.引入lombok")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("projectlombok"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("groupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("lombok"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("artifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.18")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("provided"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dependency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Data")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Post")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" postId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" userId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("⑩常用的几个注解：")]),s._v(" "),a("ul",[a("li",[s._v("@Data ： 注在类上，提供类的get、set、equals、hashCode、canEqual、toString方法")]),s._v(" "),a("li",[s._v("@AllArgsConstructor ： 注在类上，提供类的全参构造")]),s._v(" "),a("li",[s._v("@NoArgsConstructor ： 注在类上，提供类的无参构造")]),s._v(" "),a("li",[s._v("@Setter ： 注在属性上，提供 set 方法")]),s._v(" "),a("li",[s._v("@Getter ： 注在属性上，提供 get 方法")]),s._v(" "),a("li",[s._v("@EqualsAndHashCode ： 注在类上，提供对应的 equals 和 hashCode 方法")]),s._v(" "),a("li",[s._v("@Log4j/@Slf4j ： 注在类上，提供对应的 Logger 对象，变量名为 log")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("11@Bean")]),s._v(" "),a("p",[s._v("@Bean 注解将会告诉 Spring 其修饰的方法将会返回一个对象，该方法要注册为 Spring 应用上下文的 bean。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十二丶Spring全家桶")]),s._v(" "),a("p",[s._v("5个常用的spring框架")]),s._v(" "),a("ul",[a("li",[s._v("▌1.spring framework")])]),s._v(" "),a("p",[s._v("也就是我们经常说的spring框架，包括了ioc依赖注入，Context上下文、bean管理、springmvc等众多功能模块，其它spring项目比如spring boot也会依赖spring框架。")]),s._v(" "),a("ul",[a("li",[s._v("▌2.spring boot")])]),s._v(" "),a("p",[s._v("它的目标是简化Spring应用和服务的创建、开发与部署，简化了配置文件，使用嵌入式web服务器，含有诸多开箱即用的微服务功能，可以和spring cloud联合部署。\nSpring Boot的核心思想是约定大于配置，应用只需要很少的配置即可，简化了应用开发模式。")]),s._v(" "),a("ul",[a("li",[s._v("▌3.Spring Data")])]),s._v(" "),a("p",[s._v("是一个数据访问及操作的工具集，封装了多种数据源的操作能力，包括：jdbc、Redis、MongoDB等。")]),s._v(" "),a("ul",[a("li",[s._v("▌4.Spring Cloud")])]),s._v(" "),a("p",[s._v("是一套完整的微服务解决方案，是一系列不同功能的微服务框架的集合。Spring Cloud基于Spring Boot，简化了分布式系统的开发，集成了服务发现、配置管理、消息总线、负载均衡、断路器、数据监控等各种服务治理能力。比如sleuth提供了全链路追踪能力，Netflix套件提供了hystrix熔断器、zuul网关等众多的治理组件。config组件提供了动态配置能力，bus组件支持使用RabbitMQ、kafka、Activemq等消息队列，实现分布式服务之间的事件通信。")]),s._v(" "),a("ul",[a("li",[s._v("▌5. Spring Security")])]),s._v(" "),a("p",[s._v("主要用于快速构建安全的应用程序和服务，在Spring Boot和Spring Security OAuth2的基础上，可以快速实现常见安全模型，如单点登录，令牌中继和令牌交换。你可以了解一下oauth2授权机制和jwt认证方式。oauth2是一种授权机制，规定了完备的授权、认证流程。JWT全称是JSON Web Token，是一种把认证信息包含在token中的认证实现，oauth2授权机制中就可以应用jwt来作为认证的具体实现方法。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十三丶spring基本概念")]),s._v(" "),a("p",[s._v("1.IOC，就是控制反转，如最左边，拿公司招聘岗位来举例：")]),s._v(" "),a("p",[s._v("假设一个公司有产品、研发、测试等岗位。如果是公司根据岗位要求，逐个安排人选，如图中向下的箭头，这是正向流程。如果反过来，不用公司来安排候选人，而是由第三方猎头来匹配岗位和候选人，然后进行推荐，如图中向上的箭头，这就是控制反转。")]),s._v(" "),a("p",[s._v("在spring中，对象的属性是由对象自己创建的，就是正向流程；如果属性不是对象创建，而是由spring来自动进行装配，就是控制反转。这里的DI也就是依赖注入，就是实现控制反转的方式。正向流程导致了对象于对象之间的高耦合，IOC可以解决对象耦合的问题，有利于功能的复用，能够使程序的结构变得非常灵活。")]),s._v(" "),a("p",[s._v("2.context上下文和bean\nspring进行IOC实现时使用的有两个概念：context上下文和bean。")]),s._v(" "),a("p",[s._v("如中间图所示，所有被spring管理的、由spring创建的、用于依赖注入的对象，就叫做一个bean。Spring创建并完成依赖注入后，所有bean统一放在一个叫做context的上下文中进行管理。\n3.AOP")]),s._v(" "),a("p",[s._v("AOP就是面向切面编程。如右面的图，一般程序执行流程是从controller层调用service层、然后service层调用DAO层访问数据，最后在逐层返回结果。")]),s._v(" "),a("p",[s._v("AOP的实现是通过代理模式，在调用对象的某个方法时，执行插入的切面逻辑。实现的方式有动态代理也叫运行时增强，比如jdk代理、CGLIB；静态代理是在编译时进行织入或类加载时进行织入，比如AspectJ。")]),s._v(" "),a("p",[s._v("关于AOP还需要了解一下对应的Aspect、pointcut、advice等注解和具体使用方式。")]),s._v(" "),a("p",[s._v("4.事务\n需要了解spring 中对事务规定的隔离类型和事务传播类型。要知道事务的隔离级别是由具体的数据库来实现的，在数据库部分我会详细介绍")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十四丶Spring中bean的生命周期")]),s._v(" "),a("p",[s._v("第1步：调用bean的构造方法创建bean；")]),s._v(" "),a("p",[s._v("第2步：通过反射调用setter方法进行属性的依赖注入；")]),s._v(" "),a("p",[s._v("第3步：如果实现BeanNameAware接口的话，会设置bean的name；")]),s._v(" "),a("p",[s._v("第4步：如果实现了BeanFactoryAware，会把bean factory设置给bean；")]),s._v(" "),a("p",[s._v("第5步：如果实现了ApplicationContextAware，会给bean设置ApplictionContext；")]),s._v(" "),a("p",[s._v("第6步：如果实现了BeanPostProcessor接口，则执行前置处理方法；")]),s._v(" "),a("p",[s._v("第7步：实现了InitializingBean接口的话，执行afterPropertiesSet方法；")]),s._v(" "),a("p",[s._v("第8步：执行自定义的init方法；")]),s._v(" "),a("p",[s._v("第9步：执行BeanPostProcessor接口的后置处理方法。")]),s._v(" "),a("p",[s._v("这时，就完成了bean的创建过程。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十五丶Springboot如何实现同一登录拦截")]),s._v(" "),a("p",[s._v("SpringBoot通过实现HandlerInterceptor接口实现拦截器，通过实现WebMvcConfigurer接口实现一个配置类，在配置类中注入拦截器，最后再通过@Configuration注解注入配置.")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十六丶实现HandlerInterceptor接口")]),s._v(" "),a("p",[s._v("实现HandlerInterceptor接口需要实现3个方法：preHandle、postHandle、afterCompletion.")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十七丶spring加载时默认加载的文件")]),s._v(" "),a("p",[s._v("application.xml 默认加载")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十八丶spring如何管理一个类的注解是什么")]),s._v(" "),a("p",[s._v("@Compoent")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("十九丶十个string的方法")]),s._v(" "),a("ol",[a("li",[s._v("用字符数组value创建一个String对象")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实列：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//相当于String str = newString("abcd")')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("用字符数组以x开始的n个字符创建一个String对象")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实列:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//相当于String str = newString("bc");')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("获取字符串长度")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"478bhjd56"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" strlength "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("获取字符串某一位置的字符")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"43dfzyd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ch = z")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[s._v("获取字符串的子串")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" beginIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法从beginIndex位置起，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从当前字符串中取出剩余的字符作为一个新的字符串返回。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" beginIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" endIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法从beginIndex位置起，从当前字符串中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//取出到endIndex-1位置的字符作为一个新的字符串返回。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"asdfzxc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str2 ="dfzxc"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str3 ="dfz"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"6"}},[a("li",[s._v("字符串的比较")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法是对字符串内容按字典顺序进行大小比较，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通过返回的整数值指明当前字符串与参数字符串的大小关系。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//若当前对象比参数大则返回正整数，反之返回负整数，相等返回0。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" compareToIgnoreCase "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与compareTo方法相似，但忽略大小写。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//比较当前字符串和参数字符串，在两个字符串相等的时候返回true，否则返回false。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equalsIgnoreCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与equals方法相似，但忽略大小写。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ABC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a=32")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareToIgnoreCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b=0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//c=false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equalsIgnoreCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//d=true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",{attrs:{start:"7"}},[a("li",[s._v("查找子串在字符串中的位置")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于查找当前字符串中字符或子串，返回字符或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//子串在当前字符串中从左边起首次出现的位置，若没有出现则返回-1。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" intfromIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//改方法与第一种类似，区别在于该方法从fromIndex位置向后查找。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法与第一种类似，区别在于该方法从字符串的末尾位置向前查找。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" intfromIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法与第二种方法类似，区别于该方法从fromIndex位置向前查找。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ol",{attrs:{start:"8"}},[a("li",[s._v("字符串中字符的大小写转换")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回将当前字符串中所有字符转换成小写后的新串")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回将当前字符串中所有字符转换成大写后的新串")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JavaStudy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str1 = "javastudy"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str2 = "JAVASTUDY"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"9"}},[a("li",[s._v("字符串两端去空格")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//去除字符串两端的空格，中间的空格不变，一般用于登陆注册时")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" z dali "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a = 8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b = 6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"10"}},[a("li",[s._v("将字符串分割成字符串数组")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实例:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sgs#jkc#eer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出结果是sgs  jkc eer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",{attrs:{start:"11"}},[a("li",[s._v("基本类型转换为字符串")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xxx xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//double类型转string类型")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"12"}},[a("li",[s._v("替换字符串")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" oldChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" charnewChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用字符newChar替换当前字符串中所有的oldChar字符，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//并返回一个新的字符串。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceFirst")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" replacement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法用字符replacement的内容替换当前字符串中遇到的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第一个和字符串regex相匹配的子串，应将新的字符串返回。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" replacement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//该方法用字符replacement的内容替换当前字符串中遇到的所有")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//和字符串regex相匹配的子串，应将新的字符串返回。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hjdfjdskdd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str1 ="gjdfjdskdd"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hj"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str2 = "xxxdfjdskdd"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceFirst")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str3 = "hjcfjdskdd"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hj"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//str4 = "xxxdfjdskdd"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("str3"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("str4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十丶什么叫做动态绑定")]),s._v(" "),a("ol",[a("li",[s._v("动态绑定\n将一个方法调用同一个方法主体关联起来被称作绑定。")])]),s._v(" "),a("p",[s._v("在运行时根据对象的类型进行绑定，叫做后期绑定或运行时绑定。Java中除了static方法和final")]),s._v(" "),a("p",[s._v("例如，下面定义了一个Shape类型的变量，这是个Shape引用，由于后期绑定，赋予其子类Circle的一个对象引用，最终调用的是Circle.draw()方法。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("khlin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("binding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" \n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("App")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" shape "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("         shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("draw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("draw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i m a shape..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Circle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Shape")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("draw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i m a circle..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("没有动态绑定的缺陷\n任何域都将由编译器解析，因此不是多态的。\n静态方法也不是多态的。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十一丶fianl关键字的作用\nfinal修饰类")]),s._v(" "),a("p",[s._v("当你将final用于类身上时，你就需要仔细考虑，因为一个final类是无法被任何人继承的，那也就意味着此类在一个继承树中是一个叶子类，并且此类的设计已被认为很完美而不需要进行修改或扩展。对于final类中的成员，你可以定义其为final，也可以不是final。而对于方法，由于所属类为final的关系，自然也就成了final型的。你也可以明确的给final类中的方法加上一个final，但这显然没有意义。")]),s._v(" "),a("p",[s._v("final修饰方法")]),s._v(" "),a("p",[s._v("将方法声明为final，那就说明你已经知道这个方法提供的功能已经满足你要求，不需要进行扩展，并且也不允许任何从此类继承的类来覆写这个方法，但是继承仍然可以继承这个方法，也就是说可以直接使用。另外有一种被称为inline的机制，它会使你在调用final方法时，直接将方法主体插入到调用处，而不是进行例行的方法调用，例如保存断点，压栈等，这样可能会使你的程序效率有所提高，然而当你的方法主体非常庞大时，或你在多处调用此方法，那么你的调用主体代码便会迅速膨胀，可能反而会影响效率，所以你要慎用final进行方法定义。")]),s._v(" "),a("p",[s._v("final修饰类中的属性或者变量")]),s._v(" "),a("p",[s._v("无论属性是基本类型还是引用类型，final所起的作用都是变量里面存放的“值”不能变。")]),s._v(" "),a("p",[s._v("这个值，对于基本类型来说，变量里面放的就是实实在在的值，如1，“abc”等。")]),s._v(" "),a("p",[s._v("而引用类型变量里面放的是个地址，所以用final修饰引用类型变量指的是它里面的地址不能变，并不是说这个地址所指向的对象或数组的内容不可以变，这个一定要注意。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十二丶springboot怎么管理事务")]),s._v(" "),a("p",[s._v("首先使用注解 @EnableTransactionManagement 开启事务支持后，然后在访问数据库的Service方法上添加注解 @Transactional 便可。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十三丶 spring默认的隔离级别")]),s._v(" "),a("p",[s._v("default")]),s._v(" "),a("p",[s._v('默认隔离级别，每种数据库支持的事务隔离级别不一样，如果Spring配置事务时将isolation设置为这个值的话，那么将使用底层数据库的默认事务隔离级别。顺便说一句，如果使用的MySQL，可以使用"select @@tx_isolation"来查看默认的事务隔离级别')]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十四丶spring处理事务的两种方式")]),s._v(" "),a("p",[s._v("编程式事务管理使用TransactionTemplate或者直接使用底层的PlatformTransactionManager。对于编程式事务管理，spring推荐使用TransactionTemplate。")]),s._v(" "),a("p",[s._v("声明式事务管理建立在AOP之上的。其本质是对方法前后进行拦截，然后在目标方法开始之前创建或者加入一个事务，在执行完目标方法之后根据执行情况提交或者回滚事务。声明式事务最大的优点就是不需要通过编程的方式管理事务，这样就不需要在业务逻辑代码中掺杂事务管理的代码，只需在配置文件中做相关的事务规则声明(或通过基于@Transactional注解的方式)，便可以将事务规则应用到业务逻辑中。")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十五丶spring是如何创建对象的")]),s._v(" "),a("p",[s._v("工厂模式 通过class")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十六丶统一拦截controller抛出的异常")]),s._v(" "),a("p",[s._v("exception")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十七丶springMVC 的核心架构 控制器 工作流程")]),s._v(" "),a("p",[s._v("核心架构：DispatchServlet")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、用户发送请求至前端控制器DispatcherServlet。\n\n2、DispatcherServlet收到请求调用HandlerMapping处理器映射器。\n\n3、处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\n\n4、 DispatcherServlet调用HandlerAdapter处理器适配器。\n\n5、HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。\n\n6、Controller执行完成返回ModelAndView。\n\n7、HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。\n\n8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器。\n\n9、ViewReslover解析后返回具体View.\n\n10、DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。 \n\n11、DispatcherServlet响应用户。\n")])])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("二十八丶string的方法 list map")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("charAt() 返回指定位置的字符\ncharCodeAt() 返回指定位置字符的Unicode码点\nconcat() 返回链接两个字符串的字符\nslice() 返回从指定位置开始的指定长度的字符, 负数表示从尾部开始数,一个参数表示开始位置,默认到结束位置\nsubstring() 作用同slice 不建议使用\nsubstr() 基本同slice ,\nindexOf()，lastIndexOf() 在字符串中查找字符或另一个字符串的位置, 第二个参数表示开始查找的位置\ntrim() 去除字符串两端的空格\ntoLowerCase()，toUpperCase() 改为大小写\nlocaleCompare() 比较两个字符串\nmatch() 检查字符串暴扣某个子字符串或正则表达式,有则返回该子字符串或正则匹配的字符串的数组集合\nsearch() 类似match ,反水返回的值匹配到的第一个位置, 如果没有则返回-1; 可以使用正则表达式\nreplace() 替换匹配到的子字符串,\nsplit() 安装指定的字符或字符串分割字符串,返回分割数组, 第二个参数表示返回数组的最大成员数\n")])])]),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v('二十九丶spring创建对象时间\n在默认的情况下，在spring容器启动的时候创建对象\n如果在spring的配置文件中一个bean的配置中有lazy-init="true"，那么该bean在调用getBean方法时创建对象')]),s._v(" "),a("h2",{attrs:{id:"_5-springboot-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-springboot-m-m"}},[s._v("#")]),s._v(" 5. SpringBoot(((m -__-)m")]),s._v(" "),a("p",[s._v("①springIOC")]),s._v(" "),a("p",[s._v("即“控制反转”，不是什么技术，而是一种设计思想，\n以前我们都是自己创建对象，现在交给springIOC容器")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_6-springmvc-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-springmvc-m-m"}},[s._v("#")]),s._v(" 6. SpringMvc(((m -__-)m")]),s._v(" "),a("p",[s._v("①SpringMvc让Controller只接收get的请求")]),s._v(" "),a("p",[s._v("@RequestParam")]),s._v(" "),a("p",[s._v("GET和POST请求传的参数会自动转换赋值到@RequestParam 所注解的变量上")]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("②代理模式是什么")]),s._v(" "),a("p",[s._v("不改变原有的代码的基础上，添加功能")]),s._v(" "),a("p",[s._v("静态代理和动态代理")]),s._v(" "),a("blockquote",[a("p",[s._v("静态代理")])]),s._v(" "),a("ul",[a("li",[s._v("由程序员创建代理类或特定工具自动生成源代码再对其编译。在程序运行前代理类的.class文件就已经存在了。")])]),s._v(" "),a("blockquote",[a("p",[s._v("动态代理")])]),s._v(" "),a("ul",[a("li",[s._v("在代码运行的过程中生成的。代理模式是什么\n不改变原有的代码的基础上，添加功能")])]),s._v(" "),a("p",[s._v("静态代理和动态代理")]),s._v(" "),a("blockquote",[a("p",[s._v("静态代理")])]),s._v(" "),a("ul",[a("li",[s._v("由程序员创建代理类或特定工具自动生成源代码再对其编译。在程序运行前代理类的.class文件就已经存在了。")])]),s._v(" "),a("blockquote",[a("p",[s._v("动态代理")])]),s._v(" "),a("ul",[a("li",[s._v("在代码运行的过程中生成的。")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("③springmvc执行流程")]),s._v(" "),a("p",[s._v("MVC三层架构：模型（service、dao）、视图（JSP等）、控制器（Controller）")]),s._v(" "),a("blockquote",[a("p",[s._v("什么是mvc?")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" MVC 是模型、视图、控制器的简写，是一种软件设计规范\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" 是将业务逻辑、数据、显示分离的方法来组织代码\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" MVC主要的作用就是降低了控制器（"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Controller")]),s._v("）和视图 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("View")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 之间的双向耦合度\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" MVC不是一种设计模式、MVC是一种架构模式。当然不同的MVC存在着差异\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_7-redis-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-redis-m-m"}},[s._v("#")]),s._v(" 7. Redis(((m -__-)m")]),s._v(" "),a("p",[s._v("缓存击穿，缓存雪崩，缓存穿透")]),s._v(" "),a("p",[s._v("缓存穿透:")]),s._v(" "),a("p",[s._v("缓存穿透,是指查询一个数据库一定不存在的数据。数据查询先进行缓存查询，如果key不存在或者key已经过期，在对数据库进行查询，并把查询到的对象放入到缓存中，如果查询到的为空，则不放进缓存")]),s._v(" "),a("p",[s._v("缓存雪崩:")]),s._v(" "),a("p",[s._v("缓存雪崩，是指某一个时间段，缓存集中失效或者过期。")]),s._v(" "),a("p",[s._v("如何解决缓存雪崩: 设置不同的过期时间")]),s._v(" "),a("p",[s._v("缓存击穿:")]),s._v(" "),a("p",[s._v("缓存击穿是指一个key非常热点，在不停的扛着大并发，大并发集中对一个点进行访问，当这个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库")]),s._v(" "),a("p",[s._v("如何解决缓存击穿:让缓存永不过期")]),s._v(" "),a("h2",{attrs:{id:"_8-linux-m-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-linux-m-m"}},[s._v("#")]),s._v(" 8.Linux(((m -__-)m")])])}),[],!1,null,null,null);t.default=r.exports}}]);